name: Deploy to Stage

on:
  workflow_dispatch:  # Permite execução manual

jobs:
  promote_to_stage:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Fetch latest commits from dev
        run: |
          git fetch origin dev

      - name: Check if JMeter tests passed on dev
        run: |
          # Aqui você pode verificar se os testes passaram corretamente na branch dev
          # (por exemplo, se o commit foi marcado com sucesso em algum log ou tag)
          echo "Testes JMeter passaram na branch dev."

      - name: Construir a imagem Docker
        run: |
          # Defina a tag da imagem com base no tempo atual e no commit
          IMAGE_TAG="stage-$(date +'%Y%m%d%H%M%S')-$(git rev-parse --short HEAD)"
          
          # Construir a imagem Docker com a tag definida
          docker build -t myapp:$IMAGE_TAG .

      - name: Tag a imagem com a tag 'stage'
        run: |
          # Tag a imagem criada anteriormente com a tag 'stage'
          docker tag myapp:$IMAGE_TAG ${{ secrets.DOCKER_USERNAME }}/myapp:$IMAGE_TAG

      - name: Fazer o login no Docker Hub
        run: |
          # Fazer login no Docker Hub
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Enviar a imagem para o Docker Hub
        run: |
          # Enviar a imagem com a tag 'stage' para o Docker Hub
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:$IMAGE_TAG

      - name: Fazer o merge da branch dev na branch stage
        run: |
          git checkout stage
          git merge dev
          git push origin stage

      - name: Confirmar deploy para stage
        run: |
          echo "Aplicação implantada com sucesso na branch Stage com a tag da imagem $IMAGE_TAG"
